{"name":"untangle","body":"###untangle - [![Build Status](https://secure.travis-ci.org/stchris/untangle.png?branch=master)](http://travis-ci.org/stchris/untangle)\r\n\r\n* Converts XML to a Python object. \r\n* Siblings with similar names are grouped into a list. \r\n* Children can be accessed with ``parent.child``, attributes with ``element['attribute']``.\r\n* You can call the ``parse()`` method with a filename, an URL or an XML string.\r\n* Substitutes ``-``, ``.`` and ``:`` with ``_`` ``<foobar><foo-bar/></foobar>`` can be accessed with ``foobar.foo_bar``, ``<foo.bar.baz/>`` can be accessed with ``foo_bar_baz`` and ``<foo:bar><foo:baz/></foo:bar>`` can be accessed with ``foo_bar.foo_baz``\r\n\r\n###Installation\r\n\r\n```\r\npip install untangle\r\n```\r\n\r\n###Usage\r\n\r\n(See and run <a href=\"https://github.com/stchris/untangle/blob/master/examples.py\">examples.py</a> or this blog post: [Read XML painlessly](http://pythonadventures.wordpress.com/2011/10/30/read-xml-painlessly/) for more info)\r\n\r\n```python\r\nimport untangle\r\nobj = untangle.parse(resource)\r\n```\r\n\r\n``resource`` can be:\r\n\r\n* a URL\r\n* a filename\r\n* an XML string\r\n\r\nRunning the above code and passing this XML:\r\n\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<root>\r\n\t<child name=\"child1\"/>\r\n</root>\r\n```\r\nallows it to be navigated from the ``untangle``d object like this:\r\n\r\n```python\r\nobj.root.child['name'] # u'child1'\r\n```","tagline":"Convert XML to Python objects","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}